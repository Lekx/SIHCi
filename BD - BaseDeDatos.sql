-- MySQL Script generated by MySQL Workbench
-- 01/28/15 12:18:06
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema sihcig
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema sihcig
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sihcig` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `sihcig` ;

-- -----------------------------------------------------
-- Table `sihcig`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`roles` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'identificador autoincrementable por el sistema',
  `rol` VARCHAR(45) NULL COMMENT 'nombre del rol ',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`usuarios` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'id autoincrementable',
  `id_rol` INT NOT NULL COMMENT 'fk de tabla roles que guardara el tipo de rol',
  `email` VARCHAR(100) NOT NULL COMMENT 'correo electronico',
  `contrasena` VARCHAR(200) NOT NULL COMMENT 'contrasena encriptada con doble encriptacion sha1 posterior a md5',
  `fecha_registro` DATETIME NOT NULL COMMENT 'la fecha y hora en que se registra el usuario',
  `fecha_activacion` DATETIME NOT NULL COMMENT 'la fecha y hora en que el usuario activa su cuenta, por default 0000-00-00 00:00:00',
  `llave_act_rec` VARCHAR(200) NOT NULL COMMENT 'guarda llave generada al momento cre crear el registro para su activación o en caso de necesitar recuperar la contraseña. creacion: sha1(md5(sha1( fechahoraactual + email + entero random entre 1000 a 5000 )))',
  `estatus` TINYINT(1) NOT NULL COMMENT '1 activo, 0 inactivo, por default 0 al momento de registrarse.',
  PRIMARY KEY (`id`),
  INDEX `id_rol_idx` (`id_rol` ASC),
  CONSTRAINT `id_rol`
    FOREIGN KEY (`id_rol`)
    REFERENCES `sihcig`.`roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`bitacora`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`bitacora` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'identificador autoincrmentable por el sistema.',
  `id_usuario` INT NOT NULL COMMENT 'fk de la tabla usuarios',
  `seccion` VARCHAR(60) NOT NULL COMMENT 'seccion de la accion realizada',
  `accion` VARCHAR(250) NOT NULL COMMENT 'descripcion de la accion realizada',
  `fecha_hora` DATETIME NOT NULL COMMENT 'fecha y hora en que se realizo el log',
  `bitacoracol` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `id_usuario_idx` (`id_usuario` ASC),
  CONSTRAINT `id_usuario`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `sihcig`.`usuarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '			';


-- -----------------------------------------------------
-- Table `sihcig`.`paises`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`paises` (
  `id` INT NOT NULL COMMENT 'id autoincrementable por el sistema',
  `pais` VARCHAR(50) NULL COMMENT 'nombre de pais',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`permisos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`permisos` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'id autoincrementable por el sistema',
  `id_rol` INT NOT NULL,
  `modulo` VARCHAR(60) NULL COMMENT 'nombre de la seccion a la que se le estan asignando permisos',
  `actualizar` TINYINT(1) NULL COMMENT '1 autorizado, 0 denegado',
  `borrar` TINYINT(1) NULL COMMENT '1 autorizado, 0 denegado',
  `crear` TINYINT(1) NULL COMMENT '1 autorizado, 0 denegado',
  `desplegar` TINYINT(1) NULL COMMENT '1 autorizado, 0 denegado',
  PRIMARY KEY (`id`),
  INDEX `id_rol_idx` (`id_rol` ASC),
  CONSTRAINT `id_rol`
    FOREIGN KEY (`id_rol`)
    REFERENCES `sihcig`.`roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`domicilios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`domicilios` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'identificador autoincrmentable por el sistema',
  `id_pais` INT NOT NULL COMMENT 'fk de la tabla paises',
  `cp` INT NOT NULL COMMENT 'codigo postal',
  `estado` VARCHAR(20) NOT NULL COMMENT 'estado',
  `delegacion` VARCHAR(30) NOT NULL COMMENT 'delegacion',
  `municipio` VARCHAR(30) NOT NULL COMMENT 'municipio',
  `colonia` VARCHAR(45) NOT NULL COMMENT 'colonia',
  `calle` VARCHAR(50) NULL COMMENT 'calle\n',
  `numero_ext` VARCHAR(8) NOT NULL COMMENT 'numero exterior',
  `numero_int` VARCHAR(8) NULL COMMENT 'numero interior',
  `ciudad` VARCHAR(50) NOT NULL COMMENT 'ciudad',
  PRIMARY KEY (`id`),
  INDEX `id_pais_idx` (`id_pais` ASC),
  CONSTRAINT `id_pais`
    FOREIGN KEY (`id_pais`)
    REFERENCES `sihcig`.`paises` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`personas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`personas` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'id autoincrementable por el sistema',
  `id_usuario` INT NOT NULL,
  `nombres` VARCHAR(30) NOT NULL,
  `a_paterno` VARCHAR(20) NOT NULL,
  `a_materno` VARCHAR(20) NULL,
  `edo_civil` VARCHAR(20) NOT NULL,
  `sexo` VARCHAR(10) NOT NULL,
  `fecha_nacimiento` DATE NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `id_usuario_idx` (`id_usuario` ASC),
  CONSTRAINT `id_usuario`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `sihcig`.`usuarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_domicilio_actual`
    FOREIGN KEY ()
    REFERENCES `sihcig`.`domicilios` ()
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`X_empresas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`X_empresas` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'NO HAY INFORMACION DEL CLIENTE',
  `id_usuario` INT NOT NULL,
  `id_domicilio` INT NULL,
  `nombre` VARCHAR(50) NULL COMMENT 'nombre de la empresa',
  `empresascol` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `id_usuario_idx` (`id_usuario` ASC),
  CONSTRAINT `id_usuario`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `sihcig`.`usuarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`emails`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`emails` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'identificador autoincrementable por el sistema',
  `id_persona` INT NOT NULL COMMENT 'fk de la tabla personas',
  `email` VARCHAR(100) NOT NULL COMMENT 'correo electronico',
  `tipo` VARCHAR(20) NOT NULL COMMENT 'tipo de correo electronico: trabajo, residencial, particular, campus, otro.',
  PRIMARY KEY (`id`),
  INDEX `id_personas_idx` (`id_persona` ASC),
  CONSTRAINT `id_personas`
    FOREIGN KEY (`id_persona`)
    REFERENCES `sihcig`.`personas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`curriculum`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`curriculum` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_persona` INT NOT NULL COMMENT 'fk de la tabla personas',
  `id_domicilio_actual` INT NOT NULL COMMENT 'fk de la tabla domicilios donde se guardara la direccion actual de la persona',
  `id_domicilio_origen` INT NOT NULL COMMENT 'fk de la tabla domicilios donde se guardara la direccion origen de la persona',
  `activo` TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'El curriculum esta activo o inactivo\'\n',
  PRIMARY KEY (`id`),
  INDEX `id_personas_idx` (`id_persona` ASC),
  CONSTRAINT `id_personas`
    FOREIGN KEY (`id_persona`)
    REFERENCES `sihcig`.`personas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`telefonos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`telefonos` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'identificador autoincrmentable por el sistema',
  `id_persona` INT NOT NULL COMMENT 'fk de la tabla personas',
  `tipo` VARCHAR(20) NOT NULL COMMENT 'tipo de telefono(campus, domicilio,fax, movil, otros, trabajo, télex)',
  `codigo_pais` INT NOT NULL COMMENT 'codigo de pais para llamadas internacionales',
  `lada` INT NOT NULL COMMENT 'lada del pais',
  `telefono` INT NOT NULL COMMENT 'numero telefonico',
  `extension` INT NULL COMMENT 'extension si esta disponible',
  `es_principal` TINYINT(1) NOT NULL COMMENT '1 es principal, 0 no lo es',
  PRIMARY KEY (`id`),
  INDEX `id_persona_idx` (`id_persona` ASC),
  CONSTRAINT `id_persona`
    FOREIGN KEY (`id_persona`)
    REFERENCES `sihcig`.`personas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`docs_identidad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`docs_identidad` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_curriculum` INT NOT NULL,
  `tipo` VARCHAR(20) NULL,
  `descripcion` VARCHAR(250) NULL,
  `clave_doc` VARCHAR(50) NULL,
  `es_principal` TINYINT(1) NULL,
  PRIMARY KEY (`id`),
  INDEX `id_curriculum_idx` (`id_curriculum` ASC),
  CONSTRAINT `id_curriculum`
    FOREIGN KEY (`id_curriculum`)
    REFERENCES `sihcig`.`curriculum` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`manejador_archivos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`manejador_archivos` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'id autoincrementable por el sistema',
  `seccion` VARCHAR(100) NOT NULL COMMENT 'seccion en la que se mostrara el archivo',
  `ruta` VARCHAR(50) NOT NULL COMMENT 'ruta absoluta de donde se localiza el archivo + nombre y extension del archivo\n',
  `fecha_inicio` DATETIME NOT NULL COMMENT 'fecha de inicio para que se muestre el archivo en la seccion',
  `fecha_fin` DATETIME NOT NULL COMMENT 'fecha de caducidad para que se muestre el archivo en la seccion',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`escolaridades`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`escolaridades` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `grado` VARCHAR(45) NOT NULL COMMENT 'Grado de estudios (LICENCIATURA, MAESTRIA, DOCTORADO, POSDOCTORADO, ESPECIALIDAD, DIPLOMADO, BACHILLERATO, TECNICO SUPERIOR (PROFESIONAL ASOCIADO))',
  `num_cedula` VARCHAR(45) NULL COMMENT 'numero de la cedula profesional',
  `titulo` VARCHAR(45) NOT NULL,
  `fecha_botencion` DATE NOT NULL COMMENT 'fecha en que se obtuvo la escolaridad',
  `estatus` VARCHAR(25) NULL COMMENT 'estatus de la escolaridad(creditos terminados, grado obtenido, proceso, truncado)',
  `titulo_tesis` VARCHAR(250) NOT NULL,
  `id_pais` INT NULL,
  `estado` VARCHAR(45) NULL,
  `sector` INT NULL COMMENT 'sector de la escolaridad(No especificado, Instituciones del sector gobierno federal centralizado, Instituciones del sector entidades paraestatales, Instituciones del sector gobierno de las entidades federativas, Instituciones del sector de educacion superior publicas, Instituciones del sector de educacion superior privadas, Instituciones del sector privado de empresas productivas (adiat), Instituciones / organizaciones no lucrativas, Instituciones / organizaciones extranjeras, consultoras, Gobierno municipal, Gobierno federal descentralizado, Gobierno Federal Desconcentrado, Centros Públicos de Investigación\nCentros Privados de Investigación)',
  `institucion` VARCHAR(150) NOT NULL COMMENT 'combo checar conacyt.mx',
  `area` VARCHAR(45) NULL COMMENT 'combo checar conacyt.mx',
  `disciplina` VARCHAR(45) NULL COMMENT 'combo checar conacyt.mx',
  `subdisciplina` VARCHAR(45) NULL COMMENT 'combo checar conacyt.mx',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`datos_laborales`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`datos_laborales` (
  `id` INT NOT NULL,
  `id_curriculum` INT NOT NULL,
  `organizacion` VARCHAR(100) NOT NULL,
  `unidad` VARCHAR(50) NOT NULL,
  `area` VARCHAR(45) NOT NULL,
  `nombramiento` VARCHAR(45) NOT NULL,
  `dia_inicio` INT NULL,
  `mes_inicio` INT NULL,
  `ano_inicio` INT NOT NULL,
  `RUD` VARCHAR(50) NULL,
  PRIMARY KEY (`id`),
  INDEX `id_curriculum_idx` (`id_curriculum` ASC),
  CONSTRAINT `id_curriculum`
    FOREIGN KEY (`id_curriculum`)
    REFERENCES `sihcig`.`curriculum` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`proyectos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`proyectos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_curriculum` INT NOT NULL,
  `titulo` VARCHAR(250) NOT NULL,
  `disciplina` VARCHAR(100) NOT NULL COMMENT 'combobox(Anatomía Patológica, Anestesiología, Angiología, Biología de la Reproducción Humana, Cardiología, Cirugía Cardiotorácica, Cirugía General, Cirugía Maxilofacial, Cirugía Pediátrica, Cirugía Plástica y Reconstructiva, Coloproctología, Audiología, Otoneurología y Foniatría, Dermatología, Endocrinología, Epidemiología, Estomatología, Gastroenterología, Genética Médica, Geriatría, Ginecología y Obstetricia, Hematología, Infectología, Inmunología Clínica y Alergia, Medicina del Enfermo en Estado Crítico, Medicina del Trabajo, Medicina Familiar, Medicina Física y Rehabilitación, Medicina Interna, Medicina Nuclear, Nefrología, Neumología, Oftalmología, Oncología Médica y Radioterapia, Ortopedia y Traumatología, Otorrinolaringología y Cirugía de Cabeza y Cuello, Pediatría Médica, Psiquiatría y Psicología, Radiodiagnóstico e Imagen, Reumatología, Urología, Otro, Neurocirugía)',
  `tipo_investigacion` VARCHAR(250) NOT NULL COMMENT 'checkbox(biomédica, clínica, educativa, epidemiológica, servicios de salud, otra(textbox))',
  `tema_prioritario` VARCHAR(100) NOT NULL COMMENT 'combobox(Enfermedades Metabólicas (incluida obesidad)\nEnfermedades Cardiovasculares\nEnfermedades Infecciosas\nAccidentes y Violencia\nCáncer\nEnfermedades crónicas\nEnvejecimiento\nEnfermedades emergentes\nMuertes evitables (incluidas muerte materna y perinatal)\nSalud Mental y Adicciones\nDiscapacidad e Incapacidad\nOtros\n)',
  `subtema` VARCHAR(100) NOT NULL,
  `justificacion` TEXT(1500) NOT NULL,
  `estatus` VARCHAR(20) NOT NULL DEFAULT 'borrador',
  `folio` VARCHAR(20) NOT NULL,
  `tipo_proyecto` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'El proyecto esta relacionado con la industria(1 si esta patrocinado, 0 no lo esta) default 0',
  PRIMARY KEY (`id`),
  INDEX `id_curriculum_idx` (`id_curriculum` ASC),
  CONSTRAINT `id_curriculum`
    FOREIGN KEY (`id_curriculum`)
    REFERENCES `sihcig`.`curriculum` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`proyectos_docs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`proyectos_docs` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_proyecto` INT NOT NULL,
  `tipo` VARCHAR(50) NOT NULL,
  `url_documento` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `id_proyecto_idx` (`id_proyecto` ASC),
  CONSTRAINT `id_proyecto`
    FOREIGN KEY (`id_proyecto`)
    REFERENCES `sihcig`.`proyectos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`proyectos_seguim`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`proyectos_seguim` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_proyecto` INT NOT NULL,
  `comentario` TEXT(1000) NOT NULL,
  `fecha_hora` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `id_proyecto_idx` (`id_proyecto` ASC),
  CONSTRAINT `id_proyecto`
    FOREIGN KEY (`id_proyecto`)
    REFERENCES `sihcig`.`proyectos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`patentes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`patentes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_curriculum` INT NOT NULL COMMENT 'fk de la tabla curriculum',
  `id_pais` INT NULL COMMENT 'catalogo de paises',
  `tipo_participacion` VARCHAR(20) NULL COMMENT 'combobox(inventor, coinventor)',
  `nombre` VARCHAR(150) NOT NULL,
  `estado` VARCHAR(50) NULL COMMENT 'combobox(en tramite, en explotacion comercial, registrada)',
  `tipo_registro` VARCHAR(20) NOT NULL COMMENT 'radioboton(No. Solicitud, No. Registro)',
  `numero_registro` INT NOT NULL COMMENT 'numero de registro o de solicitud',
  `tipo_patente` VARCHAR(20) NULL COMMENT 'combobox(diseño industrial, modelo de utilidad, patente)',
  `fecha_concesion` DATE NULL,
  `expediente` VARCHAR(250) NULL,
  `fecha_presentacion` DATE NOT NULL,
  `clasificacion_internacional` VARCHAR(100) NULL,
  `titulo` VARCHAR(150) NULL,
  `titular` VARCHAR(70) NULL,
  `resumen` TEXT(1500) NULL,
  `es_explotacion_industrial` TINYINT(1) NULL COMMENT 'checkbox',
  `quien_explota` VARCHAR(70) NULL,
  PRIMARY KEY (`id`),
  INDEX `id_curriculum_idx` (`id_curriculum` ASC),
  CONSTRAINT `id_curriculum`
    FOREIGN KEY (`id_curriculum`)
    REFERENCES `sihcig`.`curriculum` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`difusion_prensa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`difusion_prensa` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_curriculum` INT NOT NULL,
  `url_documento` VARCHAR(45) NULL,
  `tipo_participacion` VARCHAR(45) NULL,
  `dirigido_a` VARCHAR(45) NULL,
  `fecha` DATE NULL,
  `titulo` VARCHAR(45) NOT NULL,
  `dependencia_resp` VARCHAR(45) NULL,
  `notas_periodisticas` VARCHAR(45) NULL,
  `es_nacional` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `id_curriculum_idx` (`id_curriculum` ASC),
  CONSTRAINT `id_curriculum`
    FOREIGN KEY (`id_curriculum`)
    REFERENCES `sihcig`.`curriculum` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`libros`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`libros` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'identificador autoincrmentable por el sistema.',
  `id_curriculum` INT NOT NULL COMMENT 'fk de la tabla curriculum',
  `isbn` INT NOT NULL,
  `editorial` VARCHAR(80) NOT NULL COMMENT 'nombre de la editorial del libro',
  `edicion` INT NULL COMMENT 'edicion del libro',
  `ano_publicacion` INT NOT NULL COMMENT 'año en el que se imprimio el libro, combo de años',
  `volumen` INT NULL COMMENT 'numero de volumen',
  `paginas` INT NOT NULL COMMENT 'cantidad de paginas del libro',
  `tiraje` INT NULL COMMENT 'cantidad de ejemplares que se imprimieron',
  `idioma` VARCHAR(15) NULL COMMENT 'combo de todos los idiomas',
  `tipo_traductor` VARCHAR(20) NULL COMMENT 'tipo de traductor en caso de que exista, radius(traductor, co-traductor)',
  `traductor` VARCHAR(80) NULL COMMENT 'nombre completo del traductor',
  `area` VARCHAR(40) NOT NULL COMMENT 'combo box (LOGICA, MATEMATICAS, ASTRONOMIA Y ASTROFISICA, FISICA, QUIMICA, CIENCIAS DE LA VIDA, CIENCIAS DE LA TIERRA Y DEL COSMOS, CIENCIAS DE LA SALUD, CIENCIAS AGRONOMICAS Y VETERINARIAS, MEDICINA Y PATOLOGIA HUMANA, CIENCIAS DE LA TECNOLOGIA, ANTROPOLOGIA, DEMOGRAFIA, CIENCIAS ECONOMICAS, GEOGRAFIA, HISTORIA, CIENCIAS JURIDICAS Y DERECHO, LINGÜISTICA, PEDAGOGIA, CIENCIAS POLITICAS, PSICOLOGIA, ARTES Y LETRAS, SOCIOLOGIA, CIENCIAS DE LA OCUPACION, ETICA, FILOSOFIA, PROSPECTIVA)',
  `disciplina` VARCHAR(60) NOT NULL COMMENT 'combobox() acorde al area\n',
  `subdisciplina` VARCHAR(45) NULL COMMENT 'combobox() de acuerdo a la disciplina',
  `url_documento` VARCHAR(100) NOT NULL,
  `palabras_clave` VARCHAR(250) NOT NULL COMMENT 'tags de busqueda',
  PRIMARY KEY (`id`),
  INDEX `id_curriculum_idx` (`id_curriculum` ASC),
  CONSTRAINT `id_curriculum`
    FOREIGN KEY (`id_curriculum`)
    REFERENCES `sihcig`.`curriculum` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`software`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`software` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_curriculum` INT NOT NULL COMMENT 'fk de la tabla curriculum',
  `id_pais` INT NOT NULL,
  `tipo_participacion` VARCHAR(20) NULL COMMENT 'combobox(inventor, coinventor)',
  `titulo` VARCHAR(150) NOT NULL,
  `beneficiario` VARCHAR(70) NULL,
  `entidad` VARCHAR(20) NULL COMMENT 'combobox(publica,privada,sector social)',
  `horas_hombre` DOUBLE NULL,
  `fecha_terminacion` DATE NULL,
  `sector` VARCHAR(100) NOT NULL COMMENT 'combobox(No especificado, Instituciones del sector gobierno federal centralizado, Instituciones del sector entidades paraestatales, Instituciones del sector gobierno de las entidades federativas, Instituciones del sector de educacion superior publicas, Instituciones del sector de educacion superior privadas, Instituciones del sector privado de empresas productivas (adiat), Instituciones / organizaciones no lucrativas, Instituciones / organizaciones extranjeras, consultoras, Gobierno municipal, Gobierno federal descentralizado, Gobierno Federal Desconcentrado, Centros Públicos de Investigación, Centros Privados de Investigación)',
  `organizacion` VARCHAR(100) NOT NULL COMMENT 'combobox(MANUFACTURERA OLSON SA DE CV, DREAM BUSINESS WEB SA DE CV, EDC SUPPLY S DE RL DE MI, CLUB DEPORTIVO ATENEA, ADMINISTRACION CENTRO COMERCIAL ANDARES SC, OSOS, SIXSIGMA NETWORKS MEXICO, FERMIN MONTIELRIGOBERTO, ENKONTA S DE RL DE CV, TL EFFICIENCY SA DE CV)',
  `2do_nivel` VARCHAR(100) NULL COMMENT 'combobox() de acuerdo a la organizacion',
  `resumen` TEXT(1500) NULL,
  `objetivo` TEXT(1500) NULL,
  `contribucion` TEXT(1500) NULL COMMENT 'contribucion del solicitante al desarrollo de software',
  `valor_impacto` TEXT(1500) NULL COMMENT 'Generacion de valor e impacto para el beneficiario',
  `innovacion_trascen` TEXT(1500) NULL COMMENT 'Grado de innovacion y trascendencia',
  `mecanismo_transf` TEXT(1500) NULL COMMENT 'Mecanismo de transferencia del desarrollo de software',
  `formacion_rh` TEXT(1500) NULL COMMENT 'Formacion de recursos humanos',
  `recibio_apoyo` TINYINT(1) NULL COMMENT 'Recibio apoyo de algun fondo del programas de conacyt',
  `url_documento` VARCHAR(100) NULL COMMENT 'url del documento probatorio',
  PRIMARY KEY (`id`),
  INDEX `id_curriculum_idx` (`id_curriculum` ASC),
  INDEX `id_pais_idx` (`id_pais` ASC),
  CONSTRAINT `id_curriculum`
    FOREIGN KEY (`id_curriculum`)
    REFERENCES `sihcig`.`curriculum` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_pais`
    FOREIGN KEY (`id_pais`)
    REFERENCES `sihcig`.`paises` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`capitulos_libros`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`capitulos_libros` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_curriculum` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `id_curriculum_idx` (`id_curriculum` ASC),
  CONSTRAINT `id_curriculum`
    FOREIGN KEY (`id_curriculum`)
    REFERENCES `sihcig`.`curriculum` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`certificaciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`certificaciones` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_curriculum` INT NOT NULL COMMENT 'fk de la tabla curriculum',
  `folio` VARCHAR(30) NULL,
  `referencia` VARCHAR(30) NULL,
  `tipo_referencia` VARCHAR(15) NULL COMMENT 'combobox(credencial, foja, libro,otra)',
  `especialidad` VARCHAR(45) NULL COMMENT 'combobox(Alergia e inmunología clínica  ,  Alergia e inmunología clínica pediátrica  ,  Anatomía patológica  , Anestesiología  , Anestesiología pediátrica  , Angiología y cirugía vascular  , Biología de la reproducción humana  , Cardiología  , Cardiología pediátrica  , Cirugía cardiotorácica  , Cirugía cardiotorácica pediátrica  , Cirugía general  , Cirugía oncológica (adultos)  , Cirugía pediátrica  , Cirugía plástica y reconstructiva  , Coloproctología  ,  Comunicación, audiología y foniatría  ,  Dermatología  ,   Dermatología pediátrica  ,  Dermatopatología  ,  Endocrinología ,  Endocrinología pediátrica  ,   Epidemiología ,  Gastroenterología  ,   Gastroenterología y nutrición pediátrica ,   Genética médica  ,   Geriatría  ,  Ginecología oncológica  ,  Ginecología y obstetricia  ,  Hematología  ,   Hematología pediátrica  ,   Infectología ,   Medicina de la actividad física y deportiva ,   Medicina de rehabilitación  ,   Medicina de urgencias  ,   M' /* comment truncated */ /*edicina del enfermo en estado crítico  ,  Medicina del enfermo pediátrico en estado crítico ,   Medicina del trabajo  ,   Medicina familiar  ,  Medicina interna  ,   Medicina legal  ,   Medicina materno fetal  ,   Medicina nuclear  ,   Nefrología  ,  Nefrología pediátrica  ,   Neonatología  ,   Neumología  ,   Neumología pediátrica  ,   Neumología pediátrica 98 ,  Neuroanestesiología  ,   Neurocirugía  ,   Neurocirugía pediátrica  ,   Neurofisiología clínica  ,   Neurología  ,   Neurología pediátrica  ,  Neurootología  ,  Neuropatología  ,   Neurorradiología  ,   Nutriología clínica ,   Oftalmología  ,   Oftalmología neurológica  ,   Oncología médica  ,  Oncología pediátrica  ,   Ortopedia  ,   Otorrinolaringología  ,   Otorrinolaringología pediátrica  ,  Patología clínica  ,  Patología pediátrica  ,   Pediatría ,   Psiquiatría ,   Psiquiatría infantil y de la adolescencia  ,   Radiooncología ,  Radiología e imagen  ,  Reumatología  ,   Reumatología pediátrica  ,   Terapia endovascular neurológica  ,   Urgencias pediátricas ,  Urología ,  Urología ginecológica  ,  Cirugía Maxilofacial  ,  Ortodoncia y Ortopedia Maxilofacial ,   Periodoncia)*/,
  `vigencia_inicio` DATE NOT NULL COMMENT 'fecha de inicio de vigencia',
  `vigencia_fin` DATE NULL COMMENT 'fecha terminacion de vigencia',
  `tipo` VARCHAR(45) NULL COMMENT 'combobox(certificacion, recertificacion)',
  PRIMARY KEY (`id`),
  INDEX `id_curriculum_idx` (`id_curriculum` ASC),
  CONSTRAINT `id_curriculum`
    FOREIGN KEY (`id_curriculum`)
    REFERENCES `sihcig`.`curriculum` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`tesis_dirigidas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`tesis_dirigidas` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_escolaridades` INT NOT NULL COMMENT 'fk de la tabla escolaridades',
  `titulo` VARCHAR(250) NOT NULL,
  `fecha_conclusion` DATETIME NULL,
  `autor` VARCHAR(45) NOT NULL,
  `url_documento` VARCHAR(100) NULL,
  `grado_academico` VARCHAR(45) NULL,
  `sector` VARCHAR(100) NOT NULL,
  `organizacion` VARCHAR(100) NOT NULL,
  `2do_nivel` VARCHAR(100) NULL,
  `area` VARCHAR(60) NULL,
  `disciplina` VARCHAR(60) NULL,
  `subdisciplina` VARCHAR(60) NULL,
  PRIMARY KEY (`id`),
  INDEX `id_escolaridades_idx` (`id_escolaridades` ASC),
  CONSTRAINT `id_escolaridades`
    FOREIGN KEY (`id_escolaridades`)
    REFERENCES `sihcig`.`escolaridades` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`congresos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`congresos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_curriculum` INT NOT NULL COMMENT 'fk de la tabla curriculum',
  `titulo_trabajo` VARCHAR(200) NOT NULL COMMENT 'titulo del trabajo realizado',
  `ano` INT NULL COMMENT 'año de participacion',
  `congreso` VARCHAR(200) NOT NULL COMMENT 'nombre del congreso',
  `tipo` VARCHAR(15) NULL COMMENT 'radio boton(naciona, internacional)',
  `id_pais` INT NOT NULL COMMENT 'id de la tabla paises para identificarlo',
  `tipo_trabajo` VARCHAR(25) NULL COMMENT 'combobox(Conferencia Magistral, Articulo in Extenso, Ponencia, Poster)',
  `palabras_clave` VARCHAR(250) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `id_curriculum_idx` (`id_curriculum` ASC),
  CONSTRAINT `id_curriculum`
    FOREIGN KEY (`id_curriculum`)
    REFERENCES `sihcig`.`curriculum` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`X_trabajos_cartel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`X_trabajos_cartel` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'NO HAY INFORMACION DEL CLIENTE',
  `id_curriculum` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `id_curriculum_idx` (`id_curriculum` ASC),
  CONSTRAINT `id_curriculum`
    FOREIGN KEY (`id_curriculum`)
    REFERENCES `sihcig`.`curriculum` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`X_guias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`X_guias` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'NO HAY INFORMACION DEL CLIENTE',
  `id_curriculum` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `id_curriculum_idx` (`id_curriculum` ASC),
  CONSTRAINT `id_curriculum`
    FOREIGN KEY (`id_curriculum`)
    REFERENCES `sihcig`.`curriculum` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`articulos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`articulos` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'identificador autoincrmentable por el sistema.',
  `id_curriculum` INT NOT NULL COMMENT 'fk de la tabla curriculum',
  `isbn` INT NULL,
  `editorial` VARCHAR(80) NULL COMMENT 'nombre de la editorial del libro',
  `edicion` INT NULL COMMENT 'edicion del libro',
  `ano_publicacion` INT NULL COMMENT 'año en el que se imprimio el libro, combo de años',
  `volumen` INT NULL COMMENT 'numero de volumen',
  `no_volumen` INT NULL COMMENT 'numero de volumen, cantidad',
  `pagina_inicial` INT NOT NULL COMMENT 'pagina donde inicia el articulo',
  `pagina_final` INT NOT NULL COMMENT 'pagina donde finaliza el articulo',
  `tipo_articulo` VARCHAR(20) NOT NULL COMMENT 'tipo de traductor en caso de que exista, radius(traductor, co-traductor)',
  `tiraje` INT NULL COMMENT 'cantidad de ejemplares que se imprimieron',
  `revista` VARCHAR(50) NOT NULL COMMENT 'nombre de la revista',
  `area` VARCHAR(60) NOT NULL COMMENT 'combo box (LOGICA, MATEMATICAS, ASTRONOMIA Y ASTROFISICA, FISICA, QUIMICA, CIENCIAS DE LA VIDA, CIENCIAS DE LA TIERRA Y DEL COSMOS, CIENCIAS DE LA SALUD, CIENCIAS AGRONOMICAS Y VETERINARIAS, MEDICINA Y PATOLOGIA HUMANA, CIENCIAS DE LA TECNOLOGIA, ANTROPOLOGIA, DEMOGRAFIA, CIENCIAS ECONOMICAS, GEOGRAFIA, HISTORIA, CIENCIAS JURIDICAS Y DERECHO, LINGÜISTICA, PEDAGOGIA, CIENCIAS POLITICAS, PSICOLOGIA, ARTES Y LETRAS, SOCIOLOGIA, CIENCIAS DE LA OCUPACION, ETICA, FILOSOFIA, PROSPECTIVA)',
  `disciplina` VARCHAR(60) NOT NULL COMMENT 'combobox(), cambia respecto al area',
  `subdisciplina` VARCHAR(60) NOT NULL COMMENT 'combobox(), cambia respecto a la disciplina',
  `url_documento` VARCHAR(100) NOT NULL COMMENT 'url de donde se guardara el documento probatorio',
  `palabras_clave` VARCHAR(250) NOT NULL COMMENT 'tags de busqueda',
  PRIMARY KEY (`id`),
  INDEX `id_curriculum_idx` (`id_curriculum` ASC),
  CONSTRAINT `id_curriculum`
    FOREIGN KEY (`id_curriculum`)
    REFERENCES `sihcig`.`curriculum` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`articulos_autores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`articulos_autores` (
  `id` INT NOT NULL COMMENT 'identificador autoincrmentable por el sistema.',
  `id_articulo` INT NOT NULL COMMENT 'fk de la tabla de articulos',
  `nombres` VARCHAR(30) NULL,
  `a_paterno` VARCHAR(20) NULL,
  `a_materno` VARCHAR(20) NULL,
  `posicion` INT NULL COMMENT 'posicion de autoria o coautoria',
  PRIMARY KEY (`id`),
  INDEX `id_articulo_idx` (`id_articulo` ASC),
  CONSTRAINT `id_articulo`
    FOREIGN KEY (`id_articulo`)
    REFERENCES `sihcig`.`articulos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`congresos_autores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`congresos_autores` (
  `id` INT NOT NULL COMMENT 'identificador autoincrmentable por el sistema.',
  `id_congreso` INT NOT NULL COMMENT 'fk de la tabla congresos',
  `nombres` VARCHAR(30) NULL,
  `a_paterno` VARCHAR(20) NULL,
  `a_materno` VARCHAR(20) NULL,
  `posicion` INT NULL COMMENT 'posicion de autoria o coautoria',
  PRIMARY KEY (`id`),
  INDEX `id_congreso_idx` (`id_congreso` ASC),
  CONSTRAINT `id_congreso`
    FOREIGN KEY (`id_congreso`)
    REFERENCES `sihcig`.`congresos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`libros_autores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`libros_autores` (
  `id` INT NOT NULL COMMENT 'identificador autoincrmentable por el sistema.',
  `id_libro` INT NOT NULL,
  `nombres` VARCHAR(30) NULL,
  `a_paterno` VARCHAR(20) NULL,
  `a_materno` VARCHAR(20) NULL,
  `posicion` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `id_libro_idx` (`id_libro` ASC),
  CONSTRAINT `id_libro`
    FOREIGN KEY (`id_libro`)
    REFERENCES `sihcig`.`libros` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`idiomas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`idiomas` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_curriculum` INT NOT NULL COMMENT 'fk de la tabla personas',
  `idioma` VARCHAR(45) NOT NULL COMMENT 'combobox de todos los idiomas',
  `descripcion` VARCHAR(250) NULL COMMENT 'Descripcion del idioma\n',
  `lengua_materna` VARCHAR(45) NULL COMMENT 'lengua materna',
  `es_traductor` VARCHAR(45) NULL COMMENT 'el usuario puede ser traductor?',
  `es_profesor` VARCHAR(45) NULL COMMENT 'el usuario puede ser profesor?',
  `nivel_conversacional` VARCHAR(45) NULL COMMENT 'combobox(alto,medio,bajo)',
  `nivel_lectura` VARCHAR(45) NULL COMMENT 'combobox(alto,medio,bajo)',
  `nivel_escritura` VARCHAR(45) NULL COMMENT 'combobox(alto,medio,bajo)',
  `fecha_evaluacion` DATE NULL COMMENT 'fecha en que se evaluo su nivel',
  `porcentaje_documento` INT NOT NULL COMMENT 'porcentaje que aparece en el documento a subir',
  `url_documento` VARCHAR(100) NULL,
  PRIMARY KEY (`id`),
  INDEX `id_personas_idx` (`id_curriculum` ASC),
  CONSTRAINT `id_personas`
    FOREIGN KEY (`id_curriculum`)
    REFERENCES `sihcig`.`curriculum` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`derechos_autor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`derechos_autor` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_curriculum` INT NOT NULL,
  `tipo_participacion` VARCHAR(20) NOT NULL COMMENT 'combobox(autor,coautor)',
  `titulo` VARCHAR(150) NOT NULL,
  `fecha_solicitud` DATE NULL,
  `num_tramite` INT NOT NULL,
  `resumen` TEXT(1500) NULL,
  `beneficiario` VARCHAR(70) NULL,
  `entidad` VARCHAR(20) NULL COMMENT 'combobox(publica,privada, sector social)',
  `valor_impacto` TEXT(1500) NULL COMMENT 'Generacion de valor e impacto para el beneficiario',
  PRIMARY KEY (`id`),
  INDEX `id_curriculum_idx` (`id_curriculum` ASC),
  CONSTRAINT `id_curriculum`
    FOREIGN KEY (`id_curriculum`)
    REFERENCES `sihcig`.`curriculum` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`X_aplicacion_conocimiento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`X_aplicacion_conocimiento` (
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sihcig`.`docs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sihcig`.`docs` (
)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
